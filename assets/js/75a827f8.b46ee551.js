"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8791],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return f}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},u=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),f=i,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||o;return r?t.createElement(m,a(a({ref:n},u),{},{components:r})):t.createElement(m,a({ref:n},u))}));function f(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2855:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var t=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],l={},c="Platform dependence",p={unversionedId:"user_guide/platform_dependence",id:"version-0.0.0/user_guide/platform_dependence",title:"Platform dependence",description:"Per-platform target configuration",source:"@site/versioned_docs/version-0.0.0/user_guide/platform_dependence.md",sourceDirName:"user_guide",slug:"/user_guide/platform_dependence",permalink:"/clang-build/0.0.0/user_guide/platform_dependence",editUrl:"https://github.com/Trick-17/clang-build/versioned_docs/version-0.0.0/user_guide/platform_dependence.md",tags:[],version:"0.0.0",frontMatter:{}},u=[{value:"Per-platform target configuration",id:"per-platform-target-configuration",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],s={toc:u};function d(e){var n=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"platform-dependence"},"Platform dependence"),(0,o.kt)("h2",{id:"per-platform-target-configuration"},"Per-platform target configuration"),(0,o.kt)("p",null,"The following lists and sections of the target configuration can be specified individually per platform:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"include_directories")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"public_include_directories")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"sources")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"flags"))),(0,o.kt)("p",null,"Available platforms are ",(0,o.kt)("inlineCode",{parentName:"p"},"osx"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"linux")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"windows"),".\nThe corresponding platform-specific lists are merged with the general lists,\nmeaning that they are not overridden."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[mylib]\n  target_type = "static library"\n  public_include_directories = ["include"]\n  sources = ["src/common.c"]\n\n  [mylib.public_flags]\n    compile = ["-DMYLIB_VERSION_MAJOR=2", "-DMYLIB_VERSION_MINOR=1", "-DMYLIB_VERSION_PATCH=2"]\n\n  [mylib.osx]\n    include_directories = ["include/osx"]\n    sources = ["src/osx/cocoa.m", "src/osx/handle.cpp"]\n\n    [mylib.osx.flags]\n      compile = ["-DMYLIB_OSX"]\n    [mylib.osx.interface_flags]\n      link = ["-framework", "Cocoa"]\n\n  [mylib.windows]\n    include_directories = ["include/win"]\n    sources = ["src/win/win32.cpp", "src/win/handle.cpp"]\n\n    [mylib.windows.flags]\n      compile = ["-DMYLIB_WINDOWS", "-D_CRT_SECURE_NO_WARNINGS"]\n      link = ["-luser32.lib"]\n')))}d.isMDXComponent=!0}}]);