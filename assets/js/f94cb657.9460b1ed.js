"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1238],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return b}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(t),b=i,m=c["".concat(u,".").concat(b)]||c[b]||p[b]||l;return t?r.createElement(m,a(a({ref:n},d),{},{components:t})):r.createElement(m,a({ref:n},d))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=c;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4657:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var r=t(7462),i=t(3366),l=(t(7294),t(3905)),a=["components"],o={},u="Bundling",s={unversionedId:"user_guide/bundling",id:"version-0.0.0/user_guide/bundling",title:"Bundling",description:"A common task for software developers is to make their projects",source:"@site/versioned_docs/version-0.0.0/user_guide/bundling.md",sourceDirName:"user_guide",slug:"/user_guide/bundling",permalink:"/clang-build/0.0.0/user_guide/bundling",editUrl:"https://github.com/Trick-17/clang-build/versioned_docs/version-0.0.0/user_guide/bundling.md",tags:[],version:"0.0.0",frontMatter:{}},d=[{value:"Build-folder binary bundle",id:"build-folder-binary-bundle",children:[],level:2},{value:"Redistributable bundle",id:"redistributable-bundle",children:[],level:2}],p={toc:d};function c(e){var n=e.components,t=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"bundling"},"Bundling"),(0,l.kt)("p",null,"A common task for software developers is to make their projects\nmore accessible to non-developers, for example by creating binary\nreleases."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"clang-build")," carries the following opinion:\nnon-system packages should work on their own, i.e. they should\nbring their own dependencies with them. This means that a\nredistributable bundle can simply be a zip archive."),(0,l.kt)("h2",{id:"build-folder-binary-bundle"},"Build-folder binary bundle"),(0,l.kt)("p",null,"You can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"--bundle")," flag to tell ",(0,l.kt)("inlineCode",{parentName:"p"},"clang-build")," to gather all\ndependencies of executable and shared library targets next to them\ninto their respective build folders. They should then be usable on\ntheir own, i.e. without manually gathering additional binaries."),(0,l.kt)("p",null,"For example, the binary build folders on Linux may then look as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"build\n\u251c\u2500\u2500 myexe/default/bin\n|   \u251c\u2500\u2500 myexe\n|   \u251c\u2500\u2500 libA.so\n|   \u2514\u2500\u2500 libB.so\n\u251c\u2500\u2500 libA/default/bin\n|   \u251c\u2500\u2500 libA.so\n|   \u2514\u2500\u2500 libB.so\n\u2514\u2500\u2500 libB/default/bin\n    \u2514\u2500\u2500 libB.so\n")),(0,l.kt)("p",null,"On Linux and OSX, the ",(0,l.kt)("inlineCode",{parentName:"p"},"-rpath")," flag is automatically used to cause\nthose targets to search for dependencies in their own directory."),(0,l.kt)("p",null,"Regardless of whether you use Linux, OSX or Windows, you can then\nrun your executables without having to make sure that the right\ndependencies are found."),(0,l.kt)("h2",{id:"redistributable-bundle"},"Redistributable bundle"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"This feature is still experimental and not fully implemented")),(0,l.kt)("p",null,"A redistributable bundle is what someone would need to run an\nexecutable or use a library. A main purpose is to create a bundle\nwhich will make it easy for someone to create e.g. a system package\nor an installer out of it."),(0,l.kt)("p",null,"Each target gathers from itself and its dependencies, depending\non its type:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For an executable",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the executable"),(0,l.kt)("li",{parentName:"ul"},"shared library dependencies"),(0,l.kt)("li",{parentName:"ul"},"runtime files (config, resource, shaders, ...)"))),(0,l.kt)("li",{parentName:"ul"},"For a shared library",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the shared library"),(0,l.kt)("li",{parentName:"ul"},"shared library dependencies"),(0,l.kt)("li",{parentName:"ul"},"own header files and those of dependencies"),(0,l.kt)("li",{parentName:"ul"},"usage instructions (compiler/linker flags)"))),(0,l.kt)("li",{parentName:"ul"},"For a static library",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the static library"),(0,l.kt)("li",{parentName:"ul"},"shared library dependencies"),(0,l.kt)("li",{parentName:"ul"},"own header files and those of dependencies"),(0,l.kt)("li",{parentName:"ul"},"usage instructions (compiler/linker flags)"))),(0,l.kt)("li",{parentName:"ul"},"For a header only library",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"own header files and those of dependencies"),(0,l.kt)("li",{parentName:"ul"},"usage instructions (compiler/linker flags)")))),(0,l.kt)("p",null,"On OSX, this will be a ",(0,l.kt)("inlineCode",{parentName:"p"},".app")," folder.\nOn Linux and Windows, this will be a regular folder with a structure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"build/myexe/default/redistributable\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 bin\n|   \u251c\u2500\u2500 myexe\n|   \u251c\u2500\u2500 libA.so\n|   \u2514\u2500\u2500 libB.so\n\u2514\u2500\u2500 res\n    \u251c\u2500\u2500 config.toml\n    \u2514\u2500\u2500 img\n        \u251c\u2500\u2500 logo.icns\n        \u2514\u2500\u2500 background.png\n\nbuild/libA/default/redistributable\n\u251c\u2500\u2500 instructions.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 bin\n|   \u251c\u2500\u2500 libA.so\n|   \u2514\u2500\u2500 libB.so\n\u2514\u2500\u2500 include\n    \u251c\u2500\u2500 libA\n    |   \u2514\u2500\u2500 libA.hpp\n    \u2514\u2500\u2500 libB\n        \u2514\u2500\u2500 libB.hpp\n")))}c.isMDXComponent=!0}}]);