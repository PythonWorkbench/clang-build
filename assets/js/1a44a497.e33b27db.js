"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3549],{3348:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"0.0.0","label":"0.0.0","banner":"unmaintained","badge":true,"className":"docs-version-0.0.0","isLast":false,"docsSidebars":{},"docs":{"config_reference/config_reference":{"id":"config_reference/config_reference","title":"Configuration file reference","description":"This is a reference of the available parameters you can set via"},"config_reference/project":{"id":"config_reference/project","title":"Project settings","description":"Examples of the project config parameters in use can be found in test/public_dependency."},"config_reference/target":{"id":"config_reference/target","title":"Target settings","description":"Declaration"},"examples/boost_filesystem":{"id":"examples/boost_filesystem","title":"boost/filesystem","description":"This example contains what you need in order to build boost/filesystem, but"},"examples/codeplea_genann":{"id":"examples/codeplea_genann","title":"codeplea/genann","description":""},"examples/eidheim_tiny_process":{"id":"examples/eidheim_tiny_process","title":"eidheim/tiny-process-library","description":""},"examples/examples":{"id":"examples/examples","title":"Real world examples","description":"To showcase how clang-build can be used to build real-world projects,"},"examples/glfw":{"id":"examples/glfw","title":"GLFW","description":"This is a configuration to build GLFW with the OpenGL backend."},"examples/lz4":{"id":"examples/lz4","title":"lz4","description":"The lz4 library, for now without examples or tests."},"examples/nikoreun_tinygrad":{"id":"examples/nikoreun_tinygrad","title":"nikoreun/tinygrad","description":""},"module_reference/test":{"id":"module_reference/test","title":"test","description":""},"README":{"id":"README","title":"Clang-build","description":"PyPI version"},"user_guide/bundling":{"id":"user_guide/bundling","title":"Bundling","description":"A common task for software developers is to make their projects"},"user_guide/customizations":{"id":"user_guide/customizations","title":"Customisations","description":"Let\'s have a look at some of the ways you can configure your project, if it does not have"},"user_guide/defaults":{"id":"user_guide/defaults","title":"Defaults","description":"General"},"user_guide/first_steps":{"id":"user_guide/first_steps","title":"First steps","description":"Let\'s start with a very simple project. You only have one source file in your project"},"user_guide/inheritance":{"id":"user_guide/inheritance","title":"Inheritance","description":"General"},"user_guide/multiple_projects":{"id":"user_guide/multiple_projects","title":"Multiple projects","description":"In order to manage larger project structures and nested dependencies,"},"user_guide/multiple_targets":{"id":"user_guide/multiple_targets","title":"Multiple targets","description":"For a lot of projects you will have more than one target. Maybe a main application, some libraries and"},"user_guide/platform_dependence":{"id":"user_guide/platform_dependence","title":"Platform dependence","description":"Per-platform target configuration"},"user_guide/scripting":{"id":"user_guide/scripting","title":"Adding projects with custom behaviour","description":"Instead of configuring a project using a \\"clang-build.toml\\","},"user_guide/toolchains":{"id":"user_guide/toolchains","title":"Toolchains","description":"By default, clang-build provides an llvm-clang toolchain (see the LLVM class in"}}}')}}]);