"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[953],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var a=r.createContext({}),l=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(a.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,c=e.mdxType,i=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),f=c,m=d["".concat(a,".").concat(f)]||d[f]||p[f]||i;return t?r.createElement(m,o(o({ref:n},u),{},{components:t})):r.createElement(m,o({ref:n},u))}));function f(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s.mdxType="string"==typeof e?e:c,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8058:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return a},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=t(7462),c=t(3366),i=(t(7294),t(3905)),o=["components"],s={},a="GLFW",l={unversionedId:"examples/glfw",id:"examples/glfw",title:"GLFW",description:"This is a configuration to build GLFW with the OpenGL backend.",source:"@site/docs/examples/glfw.md",sourceDirName:"examples",slug:"/examples/glfw",permalink:"/clang-build/examples/glfw",editUrl:"https://github.com/Trick-17/clang-build/docs/examples/glfw.md",tags:[],version:"current",frontMatter:{},sidebar:"examplesSidebar",previous:{title:"boost/filesystem",permalink:"/clang-build/examples/boost_filesystem"},next:{title:"lz4",permalink:"/clang-build/examples/lz4"}},u=[],p={toc:u};function d(e){var n=e.components,t=(0,c.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"glfw"},"GLFW"),(0,i.kt)("p",null,"This is a configuration to build GLFW with the OpenGL backend.\nIt has not yet been tested on Linux and building the Vulkan\nbackend has not yet been attempted."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'name = "glfw"\nurl = "https://github.com/glfw/glfw"\n\n[glfw]\n    target_type = "static library"\n    include_directories = ["include", "src", "deps"]\n    sources = ["src/context.c", "src/init.c", "src/input.c", "src/monitor.c", "src/vulkan.c", "src/window.c",\n                "deps/glad.c", "deps/getopt.c", "deps/tinycthread.c"]\n\n    [glfw.osx]\n        sources = ["src/cocoa_init.m", "src/cocoa_joystick.m", "src/cocoa_monitor.m", "src/cocoa_window.m",\n                    "src/cocoa_time.c", "src/posix_thread.c", "src/nsgl_context.m", "src/egl_context.c",\n                    "src/osmesa_context.c"]\n        [glfw.osx.flags]\n            compile = ["-D_GLFW_COCOA",\n                        "-Wdeclaration-after-statement", "-Wno-extra-semi",\n                        "-Wno-sign-compare", "-Wno-unused-parameter", "-Wno-missing-field-initializers",\n                        "-Wno-pedantic"]\n        [glfw.osx.interface_flags]\n            link = ["-framework", "Cocoa",\n                    "-framework", "IOKit",\n                    "-framework", "CoreFoundation",\n                    "-framework", "CoreVideo"]\n\n    [glfw.windows]\n        sources = ["src/win32_init.c", "src/win32_joystick.c", "src/win32_monitor.c", "src/win32_time.c", "src/win32_thread.c",\n                    "src/win32_window.c", "src/wgl_context.c", "src/egl_context.c", "src/osmesa_context.c"]\n        [glfw.windows.flags]\n            compile = ["-D_GLFW_WIN32", "-D_CRT_SECURE_NO_WARNINGS",\n                    "-Wno-unused-parameter", "-Wno-missing-field-initializers", "-Wno-pedantic"]\n        [glfw.windows.interface_flags]\n            link = ["-luser32.lib", "-lshell32.lib", "-lgdi32.lib"]\n\n    [glfw.tests]\n        single_executable = false\n        sources_exclude = ["vulkan.c", "windows.c", "glfwinfo.c", "triangle-vulkan.c"]\n        dependencies = ["glad", "tinycthread"]\n        [glfw.tests.flags]\n            compile = ["-Wno-unused-parameter", "-Wno-sign-compare", "-Wno-missing-field-initializers"]\n\n    [glfw.examples]\n        dependencies = ["glad"]\n        [glfw.examples.flags]\n            compile = ["-Wno-unused-parameter"]\n        [glfw.examples.windows.flags]\n            compile = ["-Wno-deprecated-declarations"]\n\n[glad]\n    target_type = "static library"\n    public_include_directories = ["deps"]\n    sources = ["deps/glad_gl.c"]\n    [glad.tests]\n        sources_exclude = ["*"]\n    [glad.examples]\n        sources_exclude = ["*"]\n\n[getopt]\n    target_type = "static library"\n    public_include_directories = ["deps"]\n    sources = ["deps/getopt.c"]\n    [getopt.tests]\n        sources_exclude = ["*"]\n    [getopt.examples]\n        sources_exclude = ["*"]\n\n[tinycthread]\n    target_type = "static library"\n    public_include_directories = ["deps"]\n    sources = ["deps/tinycthread.c"]\n    [tinycthread.flags]\n        compile = ["-Wno-unused-parameter"]\n    [tinycthread.windows.flags]\n        compile = ["-Wno-deprecated-declarations"]\n    [tinycthread.tests]\n        sources_exclude = ["*"]\n    [tinycthread.examples]\n        sources_exclude = ["*"]\n')))}d.isMDXComponent=!0}}]);